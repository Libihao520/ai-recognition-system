// <auto-generated />
using System;
using EFCoreMigrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreMigrations.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Entitys.Photos", b =>
                {
                    b.Property<long>("PhotosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Photobase64")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PhotosId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Model.Entitys.Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.Entitys.Yolotbs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Cls")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<bool>("IsManualReview")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("PhotosId")
                        .HasColumnType("bigint");

                    b.Property<int>("rgmsCount")
                        .HasColumnType("int");

                    b.Property<int>("sbjgCount")
                        .HasColumnType("int");

                    b.Property<int>("sbzqCount")
                        .HasColumnType("int");

                    b.Property<double>("zhl")
                        .HasColumnType("double");

                    b.Property<double>("zql")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("PhotosId");

                    b.ToTable("yolotbs");
                });

            modelBuilder.Entity("Model.Entitys.Yolotbs", b =>
                {
                    b.HasOne("Model.Entitys.Photos", "Photos")
                        .WithMany()
                        .HasForeignKey("PhotosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
